services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: stage_user
      POSTGRES_PASSWORD: C8(dn(lk)6^@
      POSTGRES_DB: django_todo_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  backend:
    build: .
    container_name: backend
    command: >
      sh -c
      "python manage.py makemigrations &&
       python manage.py migrate &&
       python manage.py collectstatic --noinput &&
       exec gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      - redis
    environment:
      - DEBUG=False
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  worker:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - ./:/app
    depends_on:
      - redis
      - backend
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pgrep", "-f", "celery" ]
      interval: 30s
      timeout: 10s
      retries: 3

  beat:
    build: .
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./:/app
    depends_on:
      - redis
      - backend
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pgrep", "-f", "celery" ]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media

volumes:
  static_volume:
  media_volume:
  postgres_data:

